
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.item
{
public sealed partial class Food : Luban.BeanBase
{
    public Food(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["NAME"].IsString) { throw new SerializationException(); }  NAME = _buf["NAME"]; }
        { if(!_buf["DESCRIBE"].IsString) { throw new SerializationException(); }  DESCRIBE = _buf["DESCRIBE"]; }
        { if(!_buf["prefabName"].IsString) { throw new SerializationException(); }  PrefabName = _buf["prefabName"]; }
        { if(!_buf["maxStackCount"].IsNumber) { throw new SerializationException(); }  MaxStackCount = _buf["maxStackCount"]; }
        { if(!_buf["interactEffectID"].IsNumber) { throw new SerializationException(); }  InteractEffectID = _buf["interactEffectID"]; }
        { if(!_buf["WaterGain"].IsNumber) { throw new SerializationException(); }  WaterGain = _buf["WaterGain"]; }
        { if(!_buf["FoodGain"].IsNumber) { throw new SerializationException(); }  FoodGain = _buf["FoodGain"]; }
        { if(!_buf["SanGain"].IsNumber) { throw new SerializationException(); }  SanGain = _buf["SanGain"]; }
        { if(!_buf["StatusGain"].IsNumber) { throw new SerializationException(); }  StatusGain = _buf["StatusGain"]; }
        { if(!_buf["Weight"].IsNumber) { throw new SerializationException(); }  Weight = _buf["Weight"]; }
    }

    public static Food DeserializeFood(JSONNode _buf)
    {
        return new item.Food(_buf);
    }

    /// <summary>
    /// 序号
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string NAME;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string DESCRIBE;
    /// <summary>
    /// 预制体名称
    /// </summary>
    public readonly string PrefabName;
    /// <summary>
    /// 最大数量，食品类物品在达到最大数量后，
    /// </summary>
    public readonly int MaxStackCount;
    /// <summary>
    /// 当这个物品在地上时，玩家与其的交互是哪一种
    /// </summary>
    public readonly int InteractEffectID;
    public readonly int WaterGain;
    public readonly int FoodGain;
    public readonly int SanGain;
    public readonly int StatusGain;
    public readonly int Weight;
   
    public const int __ID__ = 2107191929;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NAME:" + NAME + ","
        + "DESCRIBE:" + DESCRIBE + ","
        + "prefabName:" + PrefabName + ","
        + "maxStackCount:" + MaxStackCount + ","
        + "interactEffectID:" + InteractEffectID + ","
        + "WaterGain:" + WaterGain + ","
        + "FoodGain:" + FoodGain + ","
        + "SanGain:" + SanGain + ","
        + "StatusGain:" + StatusGain + ","
        + "Weight:" + Weight + ","
        + "}";
    }
}

}

