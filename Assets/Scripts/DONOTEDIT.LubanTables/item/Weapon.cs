
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.item
{
public sealed partial class Weapon : Luban.BeanBase
{
    public Weapon(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["NAME"].IsNumber) { throw new SerializationException(); }  NAME = _buf["NAME"]; }
        { if(!_buf["DESCRIBE"].IsNumber) { throw new SerializationException(); }  DESCRIBE = _buf["DESCRIBE"]; }
        { if(!_buf["maxStackCount"].IsNumber) { throw new SerializationException(); }  MaxStackCount = _buf["maxStackCount"]; }
        { if(!_buf["interactEffectID"].IsNumber) { throw new SerializationException(); }  InteractEffectID = _buf["interactEffectID"]; }
        { if(!_buf["duribility"].IsNumber) { throw new SerializationException(); }  Duribility = _buf["duribility"]; }
        { if(!_buf["Weight"].IsNumber) { throw new SerializationException(); }  Weight = _buf["Weight"]; }
        { if(!_buf["Attack"].IsNumber) { throw new SerializationException(); }  Attack = _buf["Attack"]; }
        { if(!_buf["AttackCD"].IsNumber) { throw new SerializationException(); }  AttackCD = _buf["AttackCD"]; }
        { if(!_buf["IconName"].IsString) { throw new SerializationException(); }  IconName = _buf["IconName"]; }
        { if(!_buf["SpriteName"].IsString) { throw new SerializationException(); }  SpriteName = _buf["SpriteName"]; }
        { if(!_buf["PrefabName"].IsString) { throw new SerializationException(); }  PrefabName = _buf["PrefabName"]; }
        { if(!_buf["WeaponType"].IsNumber) { throw new SerializationException(); }  WeaponType = _buf["WeaponType"]; }
        { if(!_buf["AmmoId"].IsNumber) { throw new SerializationException(); }  AmmoId = _buf["AmmoId"]; }
    }

    public static Weapon DeserializeWeapon(JSONNode _buf)
    {
        return new item.Weapon(_buf);
    }

    /// <summary>
    /// 序号<br/>近战：260001-264999<br/>远程：265000-269999
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly int NAME;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly int DESCRIBE;
    /// <summary>
    /// 在背包栏的最大堆叠数量，相当于武器必占一格
    /// </summary>
    public readonly int MaxStackCount;
    /// <summary>
    /// 当物品在地上时，玩家与其的交互是哪一种
    /// </summary>
    public readonly int InteractEffectID;
    /// <summary>
    /// 武器耐久，具体数值由策划定，但不超过100，耐久归0时，武器销毁，其中手枪和霰弹枪不消耗耐久
    /// </summary>
    public readonly int Duribility;
    /// <summary>
    /// 物品重量，最大为5，最小为0
    /// </summary>
    public readonly int Weight;
    /// <summary>
    /// 攻击力
    /// </summary>
    public readonly int Attack;
    /// <summary>
    /// 最小攻击间隔
    /// </summary>
    public readonly float AttackCD;
    public readonly string IconName;
    public readonly string SpriteName;
    public readonly string PrefabName;
    /// <summary>
    /// 0表示近战，1表示远程
    /// </summary>
    public readonly int WeaponType;
    /// <summary>
    /// 是否消耗弹药以及弹药ID，-1表示不消耗弹药
    /// </summary>
    public readonly int AmmoId;
   
    public const int __ID__ = -1736061577;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NAME:" + NAME + ","
        + "DESCRIBE:" + DESCRIBE + ","
        + "maxStackCount:" + MaxStackCount + ","
        + "interactEffectID:" + InteractEffectID + ","
        + "duribility:" + Duribility + ","
        + "Weight:" + Weight + ","
        + "Attack:" + Attack + ","
        + "AttackCD:" + AttackCD + ","
        + "IconName:" + IconName + ","
        + "SpriteName:" + SpriteName + ","
        + "PrefabName:" + PrefabName + ","
        + "WeaponType:" + WeaponType + ","
        + "AmmoId:" + AmmoId + ","
        + "}";
    }
}

}

