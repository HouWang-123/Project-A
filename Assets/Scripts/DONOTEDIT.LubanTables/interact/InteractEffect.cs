
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.interact
{
public sealed partial class InteractEffect : Luban.BeanBase
{
    public InteractEffect(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["ShortText"].IsNumber) { throw new SerializationException(); }  ShortText = _buf["ShortText"]; }
        { if(!_buf["TipText"].IsNumber) { throw new SerializationException(); }  TipText = _buf["TipText"]; }
        { if(!_buf["ToInteractItemID"].IsNumber) { throw new SerializationException(); }  ToInteractItemID = _buf["ToInteractItemID"]; }
        { if(!_buf["InteractItemID"].IsNumber) { throw new SerializationException(); }  InteractItemID = _buf["InteractItemID"]; }
        { if(!_buf["CodeExecuteID"].IsNumber) { throw new SerializationException(); }  CodeExecuteID = _buf["CodeExecuteID"]; }
    }

    public static InteractEffect DeserializeInteractEffect(JSONNode _buf)
    {
        return new interact.InteractEffect(_buf);
    }

    /// <summary>
    /// 其它表中的物品有一个交互功能ID字段，填写了这里的某一个后就会拥有这里的交互显示逻辑
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 悬停到鼠标旁边的简短提示
    /// </summary>
    public readonly int ShortText;
    /// <summary>
    /// 交互后的长文字提示
    /// </summary>
    public readonly int TipText;
    /// <summary>
    /// 被交互物品ID
    /// </summary>
    public readonly int ToInteractItemID;
    /// <summary>
    /// 交互物品ID，-1表示空手交互，-2表示忽略手中物品进行通用交互
    /// </summary>
    public readonly int InteractItemID;
    /// <summary>
    /// 交互后额外执行的代码（使用策略模式）-1表示没有额外效果
    /// </summary>
    public readonly int CodeExecuteID;
   
    public const int __ID__ = -1473407425;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "ShortText:" + ShortText + ","
        + "TipText:" + TipText + ","
        + "ToInteractItemID:" + ToInteractItemID + ","
        + "InteractItemID:" + InteractItemID + ","
        + "CodeExecuteID:" + CodeExecuteID + ","
        + "}";
    }
}

}

