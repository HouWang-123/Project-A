
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.scene
{
public sealed partial class Rooms : Luban.BeanBase
{
    public Rooms(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["NAME"].IsString) { throw new SerializationException(); }  NAME = _buf["NAME"]; }
        { if(!_buf["DESCRIBE"].IsString) { throw new SerializationException(); }  DESCRIBE = _buf["DESCRIBE"]; }
        { if(!_buf["prefabName"].IsString) { throw new SerializationException(); }  PrefabName = _buf["prefabName"]; }
        { if(!_buf["iSeeDeadPeople"].IsBoolean) { throw new SerializationException(); }  ISeeDeadPeople = _buf["iSeeDeadPeople"]; }
        { if(!_buf["lastLeave"].IsNumber) { throw new SerializationException(); }  LastLeave = _buf["lastLeave"]; }
        { var __json0 = _buf["doorList"]; if(!__json0.IsArray) { throw new SerializationException(); } DoorList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DoorList.Add(__v0); }   }
        { if(!_buf["BGM"].IsString) { throw new SerializationException(); }  BGM = _buf["BGM"]; }
        { if(!_buf["visibility"].IsNumber) { throw new SerializationException(); }  Visibility = _buf["visibility"]; }
        { if(!_buf["byTime"].IsBoolean) { throw new SerializationException(); }  ByTime = _buf["byTime"]; }
        { var __json0 = _buf["monstersIDList"]; if(!__json0.IsArray) { throw new SerializationException(); } MonstersIDList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  MonstersIDList.Add(__v0); }   }
        { var __json0 = _buf["dropRuleIDList"]; if(!__json0.IsArray) { throw new SerializationException(); } DropRuleIDList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DropRuleIDList.Add(__v0); }   }
        { if(!_buf["roomX"].IsNumber) { throw new SerializationException(); }  RoomX = _buf["roomX"]; }
        { if(!_buf["roomY"].IsNumber) { throw new SerializationException(); }  RoomY = _buf["roomY"]; }
    }

    public static Rooms DeserializeRooms(JSONNode _buf)
    {
        return new scene.Rooms(_buf);
    }

    /// <summary>
    /// 序号
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string NAME;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string DESCRIBE;
    /// <summary>
    /// 预制体名称
    /// </summary>
    public readonly string PrefabName;
    /// <summary>
    /// 默认是否处于灵视状态
    /// </summary>
    public readonly bool ISeeDeadPeople;
    /// <summary>
    /// 上次离开时间，初始值都是0
    /// </summary>
    public readonly int LastLeave;
    /// <summary>
    /// 房间包含哪些门
    /// </summary>
    public readonly System.Collections.Generic.List<int> DoorList;
    /// <summary>
    /// 背景音乐
    /// </summary>
    public readonly string BGM;
    /// <summary>
    /// 基本可见度
    /// </summary>
    public readonly int Visibility;
    /// <summary>
    /// 可见度是否按环境（时间）变化
    /// </summary>
    public readonly bool ByTime;
    /// <summary>
    /// 房间里有哪些怪物
    /// </summary>
    public readonly System.Collections.Generic.List<int> MonstersIDList;
    /// <summary>
    /// 房间里有哪些交互规则
    /// </summary>
    public readonly System.Collections.Generic.List<int> DropRuleIDList;
    /// <summary>
    /// 房间宽度
    /// </summary>
    public readonly float RoomX;
    /// <summary>
    /// 房间长度
    /// </summary>
    public readonly float RoomY;
   
    public const int __ID__ = -1359997194;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NAME:" + NAME + ","
        + "DESCRIBE:" + DESCRIBE + ","
        + "prefabName:" + PrefabName + ","
        + "iSeeDeadPeople:" + ISeeDeadPeople + ","
        + "lastLeave:" + LastLeave + ","
        + "doorList:" + Luban.StringUtil.CollectionToString(DoorList) + ","
        + "BGM:" + BGM + ","
        + "visibility:" + Visibility + ","
        + "byTime:" + ByTime + ","
        + "monstersIDList:" + Luban.StringUtil.CollectionToString(MonstersIDList) + ","
        + "dropRuleIDList:" + Luban.StringUtil.CollectionToString(DropRuleIDList) + ","
        + "roomX:" + RoomX + ","
        + "roomY:" + RoomY + ","
        + "}";
    }
}

}

