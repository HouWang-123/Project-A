
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.func
{
public sealed partial class DropRule : Luban.BeanBase
{
    public DropRule(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["NAME"].IsString) { throw new SerializationException(); }  NAME = _buf["NAME"]; }
        { if(!_buf["DESCRIBE"].IsString) { throw new SerializationException(); }  DESCRIBE = _buf["DESCRIBE"]; }
        { var __json0 = _buf["dropIDlist"]; if(!__json0.IsArray) { throw new SerializationException(); } DropIDlist = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DropIDlist.Add(__v0); }   }
        { var __json0 = _buf["dropRate"]; if(!__json0.IsArray) { throw new SerializationException(); } DropRate = new System.Collections.Generic.List<float>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DropRate.Add(__v0); }   }
    }

    public static DropRule DeserializeDropRule(JSONNode _buf)
    {
        return new func.DropRule(_buf);
    }

    /// <summary>
    /// 序号
    /// </summary>
    public readonly int ID;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string NAME;
    /// <summary>
    /// 别的表用作描述，但在这里更像是备注，方便配掉落时寻找。<br/>对了，这里没有怪物的掉落<br/>
    /// </summary>
    public readonly string DESCRIBE;
    /// <summary>
    /// 掉落物品ID列表
    /// </summary>
    public readonly System.Collections.Generic.List<int> DropIDlist;
    /// <summary>
    /// 掉落物品概率列表，与物品ID一一对应,1代表100%,如果只有一个0，则是全部等概率<br/><br/>注意，如果是第一种掉落逻辑的话，概率加和不能超过1，（可以小于）
    /// </summary>
    public readonly System.Collections.Generic.List<float> DropRate;
   
    public const int __ID__ = -1922155883;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NAME:" + NAME + ","
        + "DESCRIBE:" + DESCRIBE + ","
        + "dropIDlist:" + Luban.StringUtil.CollectionToString(DropIDlist) + ","
        + "dropRate:" + Luban.StringUtil.CollectionToString(DropRate) + ","
        + "}";
    }
}

}

